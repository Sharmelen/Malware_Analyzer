import os
import numpy as np
from random import sample
import matplotlib.pyplot as plt
import matplotlib.colors as pltc

def filesize():
    dir = input('File Path of Samples :')
    samples = os.listdir(dir)

    min_size = []
    med_size = []
    high_size = []

    for i in range (len(samples)):

        size = os.path.getsize(dir+samples[i])
        print("Sample name :"+str(samples[i])+"\n"+"Byte Size: "+str(size)+ " bytes")
        print('::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::')
        if size < 10000:
            min_size.append(size)

        elif size > 10001 and size < 30000:
            med_size.append(size)

        else:
            high_size.append(size)


    all_colors = [k for k,v in pltc.cnames.items()]

    tot_len = [len(min_size),len(med_size),len(high_size)]
    fracs = np.array(tot_len)
    labels = ['Sample Below 10000 Bytes', 'Sample Below 30000 Bytes','Samples Beyond 30000 Bytes']

    explode = ((fracs == max(fracs)).astype(int) / 20).tolist()

    for val in range(1):
        colors = sample(all_colors, len(fracs))
        plt.figure(figsize=(8,8))
        plt.pie(fracs, autopct='%1.1f%%',
                shadow=True, explode=explode, colors=colors)
        plt.title('Samples That Grouped By Byte Size')
        plt.legend(labels, loc=(1.00, 0.7), shadow=True)
        plt.show()

#filesize()
