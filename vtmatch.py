from __future__ import print_function
import json
import hashlib
from virus_total_apis import PublicApi as VirusTotalPublicApi
import os
import matplotlib.pyplot as plt; plt.rcdefaults()
import numpy as np
import matplotlib.pyplot as plt
from itertools import groupby
import time

def vt_match():
    print()
    print('****Disclaimer****\nVirus Total Can Only Scan 4 Samples Per Minute To Avoid Traffic Issue \
So If You Have Huge Number of Malwares in The Directory Please Be Patient :-)')
    API_KEY = 'ENTER YOUR API KEY HERE'
    vt = VirusTotalPublicApi(API_KEY)

    path = input('File Path of Samples :')
    sample = os.listdir(path)

    fd = []
    for j in range (len(sample)):
        full_dir = path+sample[j]
        fd.append(full_dir)



    total_hash = []
    for x in range (len(fd)):
        BLOCKSIZE = 65536
        hasher = hashlib.md5()
        with open(fd[x], 'rb') as afile:
            buf = afile.read(BLOCKSIZE)
            while len(buf) > 0:
                hasher.update(buf)
                buf = afile.read(BLOCKSIZE)
        sd = hasher.hexdigest()
        total_hash.append(sd)
    detected = {}
    virus = []
    for x in range(len(total_hash)):
        response = vt.get_file_report(total_hash[x])
        ans = json.dumps(response, sort_keys=False, indent=4)

        answer = json.loads(ans)

        try:

            print("Total Number:", answer['results']['total'])
            print("Detected:", answer['results']['positives'])
            output = list(answer['results']['scans'])

            detected.update({sample[x]: answer['results']['positives']})
            for x in range(10):
                print(str(output[x]) + " : " + str(answer['results']['scans'][output[x]]['detected']))
                if str(answer['results']['scans'][output[x]]['detected']) == 'True':
                    virus.append(str(output[x]) + " : " + str(answer['results']['scans'][output[x]]['detected']))
                elif str(answer['results']['scans'][output[x]]['detected']) == 'true':
                    virus.append(str(output[x]) + " : " + str(answer['results']['scans'][output[x]]['detected']))
        except:
            print(answer['results']['verbose_msg'])
            detected.update({sample[x]: 0})

        print('-------------------------------------------------------------------------------')
        time.sleep(15)


    flipped = {}

    for key, value in detected.items():
        if value not in flipped:
            flipped[value] = [key]
        else:
            flipped[value].append(key)


    tot_match = []
    tot_det = []

    for x in range (len(list(flipped))):
        key = list(flipped)[x]
        value = flipped[key]

        tot_match.append(key)
        tot_det.append('Group '+str(x))

        print('Group '+str(x)+':')
        for y in range(len(value)):
            print(value[y])
        print("")



    y_pos = np.arange(len(tot_match))
    performance = tot_match

    plt.bar(y_pos, performance, align='center', alpha=0.5)
    plt.xticks(y_pos, tot_det)
    plt.xticks(rotation=40,fontsize='9')
    plt.ylabel('Total Match')
    plt.title('Total Match in Virus Total')

    plt.show()

    #print(virus)

    virus.sort()
    new_n = [list(j) for i, j in groupby(virus)]

    dv = []
    names = []

    for n in range (len(new_n)):
        #print(new_n[n])
        detect_val = len(new_n[n])
        dv.append(detect_val)
        #print(detect_val)
        name = new_n[n][0].split(' ')
        names.append(name[0])
        #print(name[0])




    data = dv
    labels = names
    plt.xticks(range(len(data)), labels)
    plt.xlabel('Class')
    plt.xticks(rotation=40,fontsize='9')
    plt.ylabel('Number of Detected Malware')
    plt.xlabel('Antivirus Companies')
    plt.title('Number of Matches in Each Top 10 AV')
    plt.bar(range(len(data)), data)
    plt.show()
