import glob
import yara
import os
import numpy as np
from random import sample
import matplotlib.pyplot as plt
import matplotlib.colors as pltc

def yara_rules():

    path = 'rules/'
    new_path = os.listdir('rules/')


    files = [f for f in glob.glob(path + "**/*.yara", recursive=True)]

    rules = []
    for f in files:
        rules.append(f)



    name_space = []

    for g in range (len(rules)):
        double_slash = rules[g].find('\\')
        if double_slash > 0 :
            split = rules[g].split("\\")
        else:
            split = rules[g].split("/")
        split_1 = split[-1].strip('.yara')
        name_space.append(split_1)


    y_rules = {}
    txt_file = open('yara.txt','w')

    for x in range (len(rules)):

        y_rules.update({name_space[x] : rules[x]})
        txt_file.write(name_space[x] +':'+ rules[x]+'\n')

    txt_file = open('yara.txt','r')

    yararules = yara.compile(filepaths = y_rules )

    dir = input('File Path of Samples :')
    sample_dir = os.listdir(dir)
    tot_dir = []

    for u in range (len(sample_dir)):
        full_dir = dir + sample_dir[u]
        tot_dir.append(full_dir)

    dict_yara = {}
    for h in range (len(tot_dir)):
        f = open(tot_dir[h],'rb')
        data = f.read()

        matches = yararules.match(data = data)

        dict_yara.update({sample_dir[h]:len(matches)})



    flipped = {}

    for key, value in dict_yara.items():
        if value not in flipped:
            flipped[value] = [key]
        else:
            flipped[value].append(key)


    totval = []
    totkey = []
    print(':::::::::::::::::::::::::::::::::::::::::: ')
    for g in range (len(list(flipped))):
        key = list(flipped)[g]
        val = flipped[key]
        totkey.append(str(key)+" rule(s) matched in "+ str(len(val))+" malware")
        totval.append(len(val))

        print("Malware with "+ str(key)+" Matching Rule(s)")
        print('------------------------------------------')
        for x in range(len(val)):
            print(val[x])
        print(':::::::::::::::::::::::::::::::::::::::::: ')


    all_colors = [k for k,v in pltc.cnames.items()]

    fracs = np.array(totval)
    labels = totkey

    explode = ((fracs == max(fracs)).astype(int) / 20).tolist()

    for val in range(1):
        colors = sample(all_colors, len(fracs))
        plt.figure(figsize=(8,8))
        plt.pie(fracs, autopct='%1.1f%%',
                shadow=True, explode=explode, colors=colors)
        plt.title('Samples That Matches Yara Rules')
        plt.legend(labels, loc=(1.00, 0.7), shadow=True)
        plt.show()

#yara_rules()
