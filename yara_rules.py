import glob
import yara
import os
import numpy as np
from random import sample
import matplotlib.pyplot as plt
import matplotlib.colors as pltc

def yara_rules(dir):

    path = 'rules/'
    new_path = os.listdir('rules/')

    files = [f for f in glob.glob(path + "**/*.yara", recursive=True)]

    rules = []
    for f in files:
        rules.append(f)

    name_space = []

    for g in range (len(rules)):
        double_slash = rules[g].find('\\')
        if double_slash > 0 :
            split = rules[g].split("\\")
        else:
            split = rules[g].split("/")
        split_1 = split[-1].strip('.yara')
        name_space.append(split_1)


    y_rules = {}
    txt_file = open('yara.txt','w')

    for x in range (len(rules)):

        y_rules.update({name_space[x] : rules[x]})
        txt_file.write(name_space[x] +':'+ rules[x]+'\n')

    txt_file = open('yara.txt','r')

    yararules = yara.compile(filepaths = y_rules )

    #dir = input('File Path of Samples :')
    sample_dir = os.listdir(dir)
    tot_dir = []

    for u in range (len(sample_dir)):
        full_dir = dir + sample_dir[u]
        tot_dir.append(full_dir)

    dict_yara = {}
    for h in range (len(tot_dir)):
        f = open(tot_dir[h],'rb')
        data = f.read()

        matches = yararules.match(data = data)

        dict_yara.update({sample_dir[h]:len(matches)})



    flipped = {}

    for key, value in dict_yara.items():
        if value not in flipped:
            flipped[value] = [key]
        else:
            flipped[value].append(key)


    totval = []
    totkey = []
    f = open('report_gen/yara_rule.txt','w+')
    f = open('report_gen/yara_rule.txt','r+')
    f.truncate(0)
    f = open('report_gen/yara_rule.txt','a+')
    f.write(':::::::::::::::::::::::::::::::::::::::::: \r\n')

    for g in range (len(list(flipped))):
        key = list(flipped)[g]
        val = flipped[key]

        totkey.append("Group "+str(g))
        totval.append(len(val))

        f.write("Group "+str(g)+": Malware with "+ str(key)+" Matching Rule(s)\r\n")

        f.write('------------------------------------------\r\n')
        for x in range(len(val)):
            f.write(str(val[x])+"\r\n")

        f.write('::::::::::::::::::::::::::::::::::::::::::\r\n ')

    data = totval
    labels = totkey
    plt.xticks(range(len(data)), labels)
    plt.xticks(rotation=40,fontsize='9')
    plt.ylabel('Samples That Matches Yara Rules')
    plt.xlabel('Groups of Malware')
    plt.title('Samples With Matching Yara Rules')
    plt.bar(range(len(data)), data)
    plt.savefig('report_gen/yararule.png',bbox_inches='tight',dpi=1000)
    plt.close(1)
    #plt.show()

#yara_rules()
