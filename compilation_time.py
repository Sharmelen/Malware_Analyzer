import pefile
import os
import numpy as np
from random import sample
import matplotlib.pyplot as plt
import matplotlib.colors as pltc

# Loading an executable
def comp_time():
    path = input('File Path of Samples :')
    samples = os.listdir(path)
    full_dir = []
    comp_year = {}
    for x in range (len(samples)):
        full_dir.append(path+samples[x])
        try:
            print("Sample Name: ", samples[x])
            pe = pefile.PE(full_dir[x])
            print("Machine : " + hex(pe.FILE_HEADER.Machine))
            # Check if it is a 32-bit or 64-bit binary
            if hex(pe.FILE_HEADER.Machine) == '0x14c':
                print("This is a 32-bit binary")
            else:
                print("This is a 64-bit binary")

            print("Compilation Time : " + pe.FILE_HEADER.dump_dict()['TimeDateStamp']['Value'].split('[')[1][:-1])
            date = pe.FILE_HEADER.dump_dict()['TimeDateStamp']['Value'].split('[')[1][:-1]

            print("NumberOfSections : " + hex(pe.FILE_HEADER.NumberOfSections))
            print("Characteristics flags : " + hex(pe.FILE_HEADER.Characteristics))
            year = (date.split(' '))[-2]
            comp_year.update({samples[x]:year})
            print('::::::::::::::::::::::::::::::::::::::::::::::::::::::::::')

        except:
            print

    flipped = {}

    for key, value in comp_year.items():
        if value not in flipped:
            flipped[value] = [key]
        else:
            flipped[value].append(key)


    ts = []
    gs = []

    for j in range(len(list(flipped))):
        key_year = list(flipped)[j]
        group_samples = flipped[key_year]
        total_samples = len(group_samples)
        gs.append('Samples: '+str(group_samples)+'\nYear: '+ str(key_year))
        ts.append(total_samples )

    all_colors = [k for k,v in pltc.cnames.items()]

    fracs = np.array(ts)
    labels = gs

    explode = ((fracs == max(fracs)).astype(int) / 20).tolist()

    for val in range(1):
        colors = sample(all_colors, len(fracs))
        plt.figure(figsize=(8,8))
        plt.pie(fracs, autopct='%1.1f%%',
                shadow=True, explode=explode, colors=colors)
        plt.title('Samples That Grouped By Compilation Year')
        plt.legend(labels, loc=(1.00, 0.7), shadow=True)
        plt.show()

