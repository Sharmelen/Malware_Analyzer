import pefile
import os
import numpy as np
from random import sample
import matplotlib.pyplot as plt
import matplotlib.colors as pltc

# Loading an executable
def comp_time(dir):
    f = open('report_gen/compilation_time.txt','w+')
    f = open('report_gen/compilation_time.txt','r+')
    f.truncate(0)
    f = open('report_gen/compilation_time.txt','a+')

    #path = input('File Path of Samples :')
    path = dir
    samples = os.listdir(path)
    full_dir = []
    comp_year = {}
    for x in range (len(samples)):
        full_dir.append(path+samples[x])
        try:
            f.write("Sample Name: "+str(samples[x])+"\r\n")

            pe = pefile.PE(full_dir[x])
            f.write("Machine : " + str(hex(pe.FILE_HEADER.Machine))+"\r\n")

            # Check if it is a 32-bit or 64-bit binary
            if hex(pe.FILE_HEADER.Machine) == '0x14c':
                f.write("This is a 32-bit binary\r\n")

            else:
                f.write("This is a 64-bit binary\r\n")


            f.write("Compilation Time : " + str(pe.FILE_HEADER.dump_dict()['TimeDateStamp']['Value'].split('[')[1][:-1])+"\r\n")

            date = pe.FILE_HEADER.dump_dict()['TimeDateStamp']['Value'].split('[')[1][:-1]
            f.write("NumberOfSections : " + str(hex(pe.FILE_HEADER.NumberOfSections))+"\r\n")

            f.write("Characteristics flags : " + str(hex(pe.FILE_HEADER.Characteristics))+"\r\n")

            year = (date.split(' '))[-2]
            comp_year.update({samples[x]:year})
            f.write('::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n')

        except:
            print

    flipped = {}

    for key, value in comp_year.items():
        if value not in flipped:
            flipped[value] = [key]
        else:
            flipped[value].append(key)

    ts = []
    gs = []

    for j in range(len(list(flipped))):
        key_year = list(flipped)[j]
        group_samples = flipped[key_year]
        total_samples = len(group_samples)

        f.write('---------------------------------------------------------------\r\n')
        gs.append(key_year)

        f.write('Year: '+str(key_year)+'\r\n')

        f.write('---------------------------------------------------------------\r\n')

        for k in range(len(group_samples)):
            f.write('Sample: '+str(group_samples[k])+"\r\n")
        ts.append(total_samples )

    data = ts
    labels = gs
    plt.xticks(range(len(data)), labels)
    plt.xticks(rotation=40,fontsize='9')
    plt.ylabel('Samples That Matches Yara Rules')
    plt.xlabel('Year')
    plt.title('Samples With Same Compilation Year')
    plt.bar(range(len(data)), data)
    plt.savefig('report_gen/compilation_year.png',bbox_inches='tight',dpi=1000)
    plt.close(1)

#comp_time()
